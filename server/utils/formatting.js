/**
 * Indian formatting utilities
 * Auto-generated by PageForge
 */

/**
 * Round to nearest 5 paise (â‚¹0.05)
 * Indian salary rounding requirement
 */
function roundTo5Paise(value) {
  return Math.round(value * 20) / 20;
}

/**
 * Format currency in Indian format
 */
function formatINR(amount) {
  return new Intl.NumberFormat('en-IN', {
    style: 'currency',
    currency: 'INR',
    minimumFractionDigits: 2,
    maximumFractionDigits: 2
  }).format(amount);
}

/**
 * Format number in Indian format
 */
function formatIndianNumber(value) {
  return new Intl.NumberFormat('en-IN').format(value);
}

/**
 * Format date in Indian format
 */
function formatIndianDate(date) {
  const d = typeof date === 'string' ? new Date(date) : date;
  return d.toLocaleDateString('en-IN', {
    year: 'numeric',
    month: 'short',
    day: 'numeric'
  });
}

/**
 * Format time in Indian format
 */
function formatIndianTime(date) {
  const d = typeof date === 'string' ? new Date(date) : date;
  return d.toLocaleTimeString('en-IN', {
    hour: '2-digit',
    minute: '2-digit',
    hour12: true
  });
}

/**
 * Format datetime in Indian format
 */
function formatIndianDateTime(date) {
  const d = typeof date === 'string' ? new Date(date) : date;
  return d.toLocaleString('en-IN', {
    year: 'numeric',
    month: 'short',
    day: 'numeric',
    hour: '2-digit',
    minute: '2-digit',
    hour12: true
  });
}

/**
 * Format phone number in Indian format
 */
function formatIndianPhone(phone) {
  const cleaned = phone.replace(/\D/g, '');
  if (cleaned.length === 10) {
    return `+91 ${cleaned.slice(0, 5)} ${cleaned.slice(5)}`;
  }
  return phone;
}

/**
 * Validate Indian mobile number
 */
function isValidIndianMobile(phone) {
  const cleaned = phone.replace(/\D/g, '');
  return /^[6-9]\d{9}$/.test(cleaned);
}

/**
 * Calculate hours between two timestamps
 */
function calculateHours(start, end) {
  const startTime = typeof start === 'string' ? new Date(start) : start;
  const endTime = typeof end === 'string' ? new Date(end) : end;
  return (endTime.getTime() - startTime.getTime()) / (1000 * 60 * 60);
}

/**
 * Calculate overtime hours (beyond 8 hours)
 */
function calculateOvertimeHours(totalHours) {
  return Math.max(0, totalHours - 8);
}

/**
 * Calculate regular pay (up to 8 hours)
 */
function calculateRegularPay(hours, rate) {
  return roundTo5Paise(Math.min(hours, 8) * rate);
}

/**
 * Calculate overtime pay (beyond 8 hours, 1.5x rate)
 */
function calculateOvertimePay(hours, rate) {
  const otHours = calculateOvertimeHours(hours);
  return roundTo5Paise(otHours * rate * 1.5);
}

/**
 * Calculate total pay (regular + overtime)
 */
function calculateTotalPay(hours, rate) {
  const regularPay = calculateRegularPay(hours, rate);
  const overtimePay = calculateOvertimePay(hours, rate);
  return roundTo5Paise(regularPay + overtimePay);
}

module.exports = {
  roundTo5Paise,
  formatINR,
  formatIndianNumber,
  formatIndianDate,
  formatIndianTime,
  formatIndianDateTime,
  formatIndianPhone,
  isValidIndianMobile,
  calculateHours,
  calculateOvertimeHours,
  calculateRegularPay,
  calculateOvertimePay,
  calculateTotalPay
};
