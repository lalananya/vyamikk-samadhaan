/**
 * Template utilities for generating documents and formatted text
 */

export interface LOIData {
    employerName: string;
    employerAddress: string;
    employeeName: string;
    employeePhone: string;
    jobTitle: string;
    startDate: string;
    endDate: string;
    salary: string;
    workLocation: string;
    terms: string;
}

export interface EmailTemplateData {
    recipientName: string;
    recipientEmail: string;
    subject: string;
    body: string;
    senderName: string;
    senderEmail: string;
}

export class TemplateUtils {
    /**
     * Generate LOI preview text
     */
    static generateLOIPreview(data: LOIData): string {
        const currentDate = new Date().toLocaleDateString("en-IN", {
            year: "numeric",
            month: "long",
            day: "numeric",
        });

        return `
LETTER OF INTENT

Date: ${currentDate}

To: ${data.employeeName}
Phone: ${data.employeePhone}

Dear ${data.employeeName},

We are pleased to offer you a position as ${data.jobTitle} with our organization.

EMPLOYER DETAILS:
Name: ${data.employerName}
Address: ${data.employerAddress}

POSITION DETAILS:
Job Title: ${data.jobTitle}
Start Date: ${data.startDate || "To be determined"}
End Date: ${data.endDate || "Ongoing"}
Salary: ${data.salary || "To be discussed"}
Work Location: ${data.workLocation || "To be determined"}

TERMS AND CONDITIONS:
${data.terms || "Standard employment terms and conditions apply."}

This letter of intent is subject to verification of your credentials and successful completion of any required background checks.

Please acknowledge receipt of this letter by entering the OTP sent to your registered phone number.

Sincerely,
${data.employerName}
    `.trim();
    }

    /**
     * Generate email template
     */
    static generateEmailTemplate(data: EmailTemplateData): string {
        return `
From: ${data.senderName} <${data.senderEmail}>
To: ${data.recipientName} <${data.recipientEmail}>
Subject: ${data.subject}

${data.body}

---
This is an automated message from Vyaamik Samadhaan.
    `.trim();
    }

    /**
     * Generate role change request email
     */
    static generateRoleChangeRequestEmail(
        currentRole: string,
        requestedRole: string,
        reason: string,
        userName: string
    ): string {
        return `
Dear Support Team,

I would like to request a role change in my Vyaamik Samadhaan account.

Current Role: ${currentRole}
Requested Role: ${requestedRole}
Reason: ${reason}

User: ${userName}
Request Date: ${new Date().toLocaleDateString()}

Please review my request and let me know if any additional information is required.

Thank you for your time.

Best regards,
${userName}
    `.trim();
    }

    /**
     * Generate payment receipt template
     */
    static generatePaymentReceiptTemplate(data: {
        receiptId: string;
        amount: number;
        currency: string;
        payerName: string;
        payeeName: string;
        description: string;
        date: string;
        status: string;
    }): string {
        return `
PAYMENT RECEIPT

Receipt ID: ${data.receiptId}
Date: ${data.date}
Status: ${data.status}

PAYMENT DETAILS:
Amount: ${data.currency} ${data.amount}
From: ${data.payerName}
To: ${data.payeeName}
Description: ${data.description}

This receipt serves as proof of payment transaction.

Generated by Vyaamik Samadhaan
    `.trim();
    }

    /**
     * Generate attendance report template
     */
    static generateAttendanceReportTemplate(data: {
        employeeName: string;
        period: string;
        totalDays: number;
        presentDays: number;
        absentDays: number;
        attendancePercentage: number;
    }): string {
        return `
ATTENDANCE REPORT

Employee: ${data.employeeName}
Period: ${data.period}

SUMMARY:
Total Working Days: ${data.totalDays}
Present Days: ${data.presentDays}
Absent Days: ${data.absentDays}
Attendance Percentage: ${data.attendancePercentage}%

Generated on: ${new Date().toLocaleDateString()}

This report is generated by Vyaamik Samadhaan
    `.trim();
    }

    /**
     * Generate job posting template
     */
    static generateJobPostingTemplate(data: {
        title: string;
        company: string;
        location: string;
        salary: string;
        description: string;
        requirements: string[];
        benefits: string[];
        contactInfo: string;
    }): string {
        const requirementsList = data.requirements.map(req => `• ${req}`).join('\n');
        const benefitsList = data.benefits.map(benefit => `• ${benefit}`).join('\n');

        return `
JOB POSTING

Position: ${data.title}
Company: ${data.company}
Location: ${data.location}
Salary: ${data.salary}

JOB DESCRIPTION:
${data.description}

REQUIREMENTS:
${requirementsList}

BENEFITS:
${benefitsList}

CONTACT INFORMATION:
${data.contactInfo}

Posted on: ${new Date().toLocaleDateString()}
    `.trim();
    }

    /**
     * Generate OTP message template
     */
    static generateOTPMessage(otp: string, purpose: string = "verification"): string {
        return `
Your OTP for ${purpose} is: ${otp}

This OTP is valid for 5 minutes. Do not share it with anyone.

If you didn't request this OTP, please ignore this message.

Vyaamik Samadhaan
    `.trim();
    }

    /**
     * Generate welcome message template
     */
    static generateWelcomeMessage(userName: string, role: string): string {
        return `
Welcome to Vyaamik Samadhaan, ${userName}!

Your account has been successfully created with the role: ${role}

You can now:
• Complete your profile setup
• Explore available features
• Connect with other users
• Access role-specific tools

If you have any questions, please contact our support team.

Best regards,
Vyaamik Samadhaan Team
    `.trim();
    }

    /**
     * Format currency amount
     */
    static formatCurrency(amount: number, currency: string = "INR"): string {
        return new Intl.NumberFormat("en-IN", {
            style: "currency",
            currency: currency,
        }).format(amount);
    }

    /**
     * Format date for display
     */
    static formatDate(date: string | Date, format: "short" | "long" | "medium" = "medium"): string {
        const dateObj = typeof date === "string" ? new Date(date) : date;

        const options: Intl.DateTimeFormatOptions = {
            short: { year: "2-digit", month: "short", day: "numeric" },
            medium: { year: "numeric", month: "short", day: "numeric" },
            long: { year: "numeric", month: "long", day: "numeric" },
        }[format];

        return dateObj.toLocaleDateString("en-IN", options);
    }

    /**
     * Format phone number for display
     */
    static formatPhoneNumber(phone: string): string {
        const cleaned = phone.replace(/\D/g, "");
        if (cleaned.length === 10) {
            return `+91 ${cleaned.slice(0, 5)} ${cleaned.slice(5)}`;
        }
        return phone;
    }

    /**
     * Truncate text with ellipsis
     */
    static truncateText(text: string, maxLength: number): string {
        if (text.length <= maxLength) return text;
        return text.slice(0, maxLength - 3) + "...";
    }
}

